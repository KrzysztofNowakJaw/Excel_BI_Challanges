#First solution in R, under it SQL

#Link to challange
#https://www.linkedin.com/feed/update/urn:li:activity:7165555694702727169/

library(tidyverse)
library(readxl)

filename <- "Excel_Challenge_395 - Connected Points.xlsx"

df <- read_xlsx(filename,range = "A1:D8")

df <- df |> 
  mutate(Index = row_number(), .before = Coord1)

df

Verify <- df %>%
  pivot_longer(cols = -c("Index"), names_to = "CoordNumber", values_to = "Digits") %>%
  group_by(Index) %>%
  filter(!is.na(Digits)) |>
  mutate(X = str_extract(Digits, "^\\d+"),
         Y = str_extract(Digits, "\\d+$"),
         IsSame = ifelse(
           (Y == lead(X) & row_number() <= max(row_number()) - 1) | row_number() == max(row_number()), "YES", "NO"),
         Answer = ifelse(all(IsSame == "YES"), "YES", "NO")) |>
select(Index,Answer)


Answer <- df |>
  inner_join(Verify,by = "Index",multiple = "first")

#SQL

WITH Base AS (
    SELECT *,
        unnest(ARRAY[coord1, coord2, coord3, coord4]) AS Combined,
        ROW_NUMBER() OVER () AS Indeks
    FROM Coords
),
Intermediate AS (
    SELECT 
        Indeks,
        Combined,
        split_part(Combined, ', ', 1) AS X,
        split_part(Combined, ', ', 2) AS Y,
        COUNT(Indeks) OVER (PARTITION BY Indeks) AS RowsInGroup,
        ROW_NUMBER() OVER (PARTITION BY Indeks) AS InternalI
    FROM Base
    WHERE Combined IS NOT NULL
),
Lastcalc AS (	
    SELECT 
        Indeks,
        Combined,
        RowsInGroup,
        X,
        Y,
        InternalI,
        CASE WHEN (
            (Y = LEAD(X) OVER (PARTITION BY Indeks)) OR InternalI = RowsInGroup)
        THEN 1 ELSE 0 END AS Checks
    FROM Intermediate
)
SELECT DISTINCT
    Base.Indeks,
    coord1,
    coord2,
    coord3,
    coord4,
    COALESCE(Answer, 'NO') AS Answer
FROM Base
LEFT JOIN (
    SELECT 
        Indeks,
        'YES' AS Answer
    FROM Lastcalc
    GROUP BY Indeks, RowsInGroup
    HAVING SUM(Checks) = RowsInGroup
) AS LC ON LC.Indeks = Base.Indeks
ORDER BY Base.Indeks;

